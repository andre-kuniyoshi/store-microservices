version: '3.4'

services:

####### PROXIES #########
  traefik:
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    depends_on:
      - identity.localhost
      - aspnetcoremvc.localhost
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

####### OBESERVABILITY #########
  # elasticsearch:
  #   container_name: elasticsearch
  #   environment:
  #     - xpack.monitoring.enabled=true
  #     - xpack.watcher.enabled=false
  #     - xpack.security.enabled=false
  #     - xpack.security.enrollment.enabled=false
  #     - discovery.type=single-node
  #     - cluster.name=docker-cluster
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #   ports:
  #       - "9200:9200"
  #   volumes:
  #       - elasticsearch-data:/usr/share/elasticsearch/data   

  # kibana:
  #   container_name: kibana
  #   environment:        
  #       - ELASTICSEARCH_URL=http://elasticsearch
  #   depends_on:
  #       - elasticsearch
  #   ports:
  #       - "5601:5601"


  portainer:
    container_name: portainer
    restart: always
    ports:
      #- "8080:8000"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  # pgadmin:
  #   container_name: pgadmin
  #   environment:
  #     - PGADMIN_DEFAULT_EMAIL=admin@admin.com
  #     - PGADMIN_DEFAULT_PASSWORD=admin@1234
  #   restart: always
  #   ports:
  #     - "5050:80"
  #   volumes:
  #     - pgadmin_data:/root/.pgadmin

  ####### DATABASES #########
  mongodb:
    container_name: shop-mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  redisdb:
    container_name: shop-redis
    restart: always
    ports:
      - "6379:6379"

  postgresdb:
    container_name: shop-postgres
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin@1234
      - POSTGRES_DB=InventoryDB
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  sqlserverdb:
    container_name: shop-sqlserver
    environment:
      SA_PASSWORD: "Admin@1234"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
    restart: always
    ports:
      - "1433:1433"

####### MESSAGE BROKERS #########
  rabbitmq:
    container_name: rabbitmq-broker
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"

####### SERVICES #########
  identity.localhost:
    container_name: identity.localhost
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    depends_on:
      - sqlserverdb
      - rabbitmq
    ports:
      - "8000:80"

  register.api:
    container_name: register.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    depends_on:
      - sqlserverdb
      - rabbitmq
    ports:
      - "8001:80"

  catalog.api:
    container_name: catalog.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    depends_on:
      - mongodb
    ports:
      - "8002:80"

  basket.api:
    container_name: basket.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "CacheSettings:ConnectionString=shop-redis:6379"
      - "GrpcSettings:DiscountUrl=http://discount.grpc"
      - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq-broker:5672"
    depends_on:
      - redisdb
      - rabbitmq
    ports:
      - "8003:80"

  inventory.api:
    container_name: inventory.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - postgresdb
    ports:
      - "8004:80"

  inventory.grpc:
    container_name: inventory.grpc
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - postgresdb
    ports:
      - "8014:80"

  order.api:
    container_name: order.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker

    depends_on:
      - sqlserverdb
      - rabbitmq

    ports:
      - "8005:80"

####### GATEWAYS #########
  ocelotapigateway:
    container_name: ocelotapigateway
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    depends_on:
      - catalog.api
      - register.api
      - basket.api
      - discount.api
      - order.api
    ports:
      - "8010:80"

  # shopping.aggregator:
  #   container_name: shopping.aggregator
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Development
  #     - "ApiSettings:CatalogUrl=http://catalog.api"
  #     - "ApiSettings:BasketUrl=http://basket.api"
  #     - "ApiSettings:OrderUrl=http://order.api"
  #   depends_on:
  #     - catalog.api
  #     - basket.api
  #     - order.api
  #   ports:
  #     - "8011:80"

####### APPS #########
  # aspnetrazor:
  #   container_name: aspnetrazor
  #   environment:
  #       - ASPNETCORE_ENVIRONMENT=Development
  #       - "ApiSettings:GatewayAddress=http://ocelotapigateway"
  #   depends_on:
  #       - ocelotapigateway
  #       - catalog.api
  #       - basket.api
  #       - discount.api
  #       - order.api
  #   ports:
  #       - "8020:80"

  aspnetcoremvc.localhost:
    container_name: aspnetcoremvc.localhost
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    depends_on:
      - sqlserverdb
    ports:
      - "8021:80"
